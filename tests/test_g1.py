from bn256.constants import ORDER
from bn256.curve import CurvePoint
from bn256.g1 import G1


class TestG1:
    def test_g1_scalar_base_mult_order(self):  # ✅
        g = G1.scalar_base_mult(ORDER)
        assert g.p.is_infinity()

    def test_g1_add_one(self):  # ✅
        g = G1.scalar_base_mult(ORDER)
        one = G1.scalar_base_mult(1)
        c = g.add(one)
        assert c == one

    def test_g1_identity(self):  # ✅
        g = G1.scalar_base_mult(0)
        assert g.p.is_infinity()

    def test_g1_scalar_base_mult(self):  # ✅
        k = 47788134424157642025149506878156847317383594042762454755131214176563802632226
        a = G1.scalar_base_mult(k)
        assert a.p.x == 23147198739377303696268760185879916104951352014158972815042481199518662237163
        assert a.p.y == -137543789958245874112820606672873105444208967262602295734271787485976776532754
        assert a.p.z == 26012546881300251529648179877688239169461623290701223441177116509219047587844

    def test_g1_scalar_mult(self):  # ✅
        g1 = G1(
            CurvePoint(
                8540771599278031547405679207038903393345403538613741134550989902927278339086,
                12196676206904906472709080489220602835559676670803607968703219898639422208021,
            )
        )
        k = 3980647517888122856822182160690720437624182590661027121449479086817936314326

        h = g1.scalar_mult(k)
        assert h.p.x == 33952822349928257784238991800298842573500493619101909799774918185543788070191
        assert h.p.y == -127858765354401254179363456948505070216058303619048188702349533327242843083172
        assert h.p.z == 13503192702291695420434473302267082624408933985548901619639552781433956149498

    def test_g1_add(self):  # ✅
        a = G1(
            CurvePoint(
                -33336117382591027095719413316434388379196011368730392096352608698219478990349,
                -19474247103719228591259473876596125797863794112534970073972132008824893697004,
                7415495270055275319546155495026009428352055167486410457338809610456064410355,
            )
        )
        b = G1(
            CurvePoint(
                9299752785499866482624888478847185322181126863168483451256631588977450394096,
                -4933137071308637364602170128533222591144484188568755345729930436057462860807,
                9299752785499866482624888478847185322181126863168483451256631588977450394096,
            )
        )
        c = a + b
        assert c.p.x == -30603614522626022079969036697462434481376743122790276193587043616338160816259
        assert c.p.y == -12049116378055894544997665419871821449968532779377550815026767852899872176155
        assert c.p.z == 6675966326243444945362185393465336750012321181731917370344874725383496960867

    def test_g1_add_affine(self):  # ✅
        a = G1(
            CurvePoint(
                47998275762796149437592624029200564750179803736476891273944422029849738670472,
                46990006276439800825058957394253553315977747486572295241013934648515217175438,
            )
        )
        b = G1(
            CurvePoint(
                26055682892788392592874266661199592684948613098633024552201453135670589267743,
                -23385020594152323905874722550834816391561019656380058204093917021325613032725,
            )
        )

        c = a + b
        assert c.p.x == -24880591103753260497016291171775997527799005646715542446016330561278394294058
        assert c.p.y == 7382925800078731474668416153099174648669990075458462481967365901161446568715
        assert c.p.z == 21779542875502311977302502499769881135626552196205737544581175895577379820291

    def test_g1_unmarshal(self):  # ✅
        g1_hex = (
            "181f3e4de59e9e7f99bc6d9040158a49bd40e1e7811fad159cd95eeb295d5092"
            "0f3cebf32b57157043ae6aa6ac82f9dcf0048d4d9abd94d2589ed812d240305c"
        )
        g1 = G1.unmarshal(bytes.fromhex(g1_hex))
        assert g1.marshal().hex() == g1_hex

    def test_random_g1(self):  # ✅
        k, a = G1.random_g1()
        b = G1.scalar_base_mult(k)
        assert a.marshal() == b.marshal()

    def test_g1_neg(self):  # ✅
        a = G1(
            CurvePoint(
                47998275762796149437592624029200564750179803736476891273944422029849738670472,
                46990006276439800825058957394253553315977747486572295241013934648515217175438,
            )
        )
        c = a.neg()
        assert c.p.x == 47998275762796149437592624029200564750179803736476891273944422029849738670472
        assert c.p.y == -46990006276439800825058957394253553315977747486572295241013934648515217175438
        assert c.p.z == 1

        c2 = -a
        assert c2 == c

    def test_g1_copy(self):
        a = G1(
            CurvePoint(
                47998275762796149437592624029200564750179803736476891273944422029849738670472,
                46990006276439800825058957394253553315977747486572295241013934648515217175438,
            )
        )
        assert a.copy() == a