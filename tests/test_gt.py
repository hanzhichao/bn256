from bn256.constants import ORDER
from bn256.g1 import G1, CURVE_G
from bn256.g2 import G2, TWIST_G
from bn256.gfp12 import Gfp12
from bn256.gfp2 import Gfp2
from bn256.gfp6 import Gfp6
from bn256.gt import GT


class TestGt:

    def test_gt_add(self):  # ✅
        a = GT.unmarshal(
            bytes.fromhex(
                "1b96870a31666e7d4e13cdfbc2ca85e9c7829eaf021783be4c7b339fcab5be8f257b90b6195d590fae2da6eee9df16256f0e6c"
                "54dabd265c43ebd3e2369b6c261a1714c14227e2063f0ad55356445be5fd20c6a0323221f8a3ce7e561362a222207a4328a383"
                "31279c2f5c0e78c2dee8477c8d51713bb389e2ccfec31c88a44328a585c9fc45a3dddd70865a70b0efa726bcc1766ff7004676"
                "b2b0d95d2f0d070bafd524765c1497dd96d851258fd0ab35bc609b796ec627fd2e7e8212dbf5450d849592b85e4d0f6f61bd6e"
                "e1c44333deb0015ea59631c55d0bd7aca032d6251c328183f1fcf4bff50f4b18e240c6f620ef9cb7842c7b25c00ddc238ddcb4"
                "f829033af69fbb845f696efb5e423638311c4ef9fd7a6ed508981d3b784f9f13ff2426f5597399918158d491142ef863df65d6"
                "24bf5ed9517e7600753bcd4419a118ef20b7e721f59631b7065c73c0f75cf6f388009b183b9298044245f8ed991c23ee6b24b4"
                "87ef3c258370c3a225b5d4b4451083367799c6704e6f4dd5024f97"
            )
        )
        assert a.p.x.x.x == 12478405982023673740842978244506695253012218450155435135843856009924248452751
        assert a.p.x.x.y == 16953896347404037293538525729357464744230584171659929120031485880344570981414
        assert a.p.x.y.x == 11800914790818489635401135227873339035753773077114509525301491750532632715810
        assert a.p.x.y.y == 14690030009190461774782757654834827815063003978704981722050201246980867925059
        assert a.p.x.z.x == 18384967086799837969237119602622172193171276061671383861563115541428945489159
        assert a.p.x.z.y == 5286110625746824051038134340239486183598244118528079530829402596908885341509
        assert a.p.y.x.x == 6114323159907349833584525530180785616747170442277130841980938041259342353957
        assert a.p.y.x.y == 12753995996086449847446229504547860483481642275430179451980933615198310020344
        assert a.p.y.y.x == 18550534283365045476139189743622891324023074147290684187370793879861016335359
        assert a.p.y.y.y == 16352096076923473559640965900164949305703613894856139099045241977248923523489
        assert a.p.y.z.x == 11278010628374873992978188922952881196270811897160516868973128288998754457884
        assert a.p.y.z.y == 16252198778260898386143851727674754807570269636917706023780963008404969901975

        b = GT.unmarshal(
            bytes.fromhex(
                "2f911e8f0584f5852afc421eb6420ee0d8cd2182483d967ae6dde320bd9a3b6b2f82eadda97078e8bed5becbef7ab2f739d865"
                "6345e5f1670263eb9999fd8ef602a524f7f825f2ee05a577e0ed267b529ea7b09fe4f909f620b6ff83d6cdb1fd0a012dc40c14"
                "9b7efa3e645eb23bcf86c1950c4b2e6c698fc3c4e8867acee94602013c4844a52d8db89347b2f70b92c72bb9f6b6beeeaa31cc"
                "1aabfe6ce0aec413dcf4e136456639adefb6c4e3cb9384e1b0a58e4c6d3641d94319bf6911440209085190fda5d929c0371b4e"
                "8bd18f6b26e8daf17ff6481b008c574701217b041a9f07daf352054078bf4ac671f9937490dbc6a72b9d35e65aada63f0da799"
                "441b524efc8536aa7e041369e8d81a465f8d6c574b0a16ef355bb911c2bb95eaf91504129a15e929dd7985e9a0c54664be321d"
                "f74895cdeb710e781ea99290598b230babee38dbdcaa325bd15e743f24e9055c795422602e7b12448d7a401dc0af21bd675c5d"
                "a7307d035310a7f644207d5d68ab5063f911c5222e5794f63f30e8"
            )
        )

        assert b.p.x.x.x == 21515107616050420745254685885180036004872612955902009629771437056605462084459
        assert b.p.x.x.y == 21490014986472118361733049744600706609176400320128011272116734092628931219190
        assert b.p.x.y.x == 1196410610963337061685044852067617562410671813315163356576506590221719941629
        assert b.p.x.y.y == 4525211196904819500215588427476664778828574454832530257312837240081882212678
        assert b.p.x.z.x == 906808597357464728010041208941958075014632246089144208252256711088843828932
        assert b.p.x.z.y == 8984340575145335911515672285546996260203941819381282862475411883510325134338
        assert b.p.y.x.x == 4085513364166270498119844276204907059520797724801164733707917346900226964228
        assert b.p.y.x.y == 12041116961582118337166086780117135417764486109067674373489196546753338775876
        assert b.p.y.y.x == 12357873515210652860966454865238154181029588355106283453912868335544222214905
        assert b.p.y.y.y == 9505765594081212704687539716908272594553073430455168368828438917433896491403
        assert b.p.y.z.x == 15851571639207428091616045667964299867289388398908174733684279933971482919087
        assert b.p.y.z.y == 15260971468542539118729243311537673208078679570897335071157561722002818937064

        c = a + b

        assert c.p.x.x.x == -1675599505580013736848726344121663250734276380014938814643239428398383427547
        assert c.p.x.x.y == -35744611921910172941095817410133694930319933112750369397334552137263894366632
        assert c.p.x.y.x == 101140604317677357626288223352537256453784072168522189700482456447078954957556
        assert c.p.x.y.y == 108438744683236932142052935739261815008410961165920235258725006451710922660940
        assert c.p.x.z.x == -756660635688569433744331744979133479225638748551159684564162642701223381459
        assert c.p.x.z.y == 67978123258108546253415081516926192439283403645684447051412366259995848190036
        assert c.p.y.x.x == 177433364947782810261525258074678035169371486995644091103284402052241047252409
        assert c.p.y.x.y == 114010638950055024841991636875904392724750054595206365541509001931206775869043
        assert c.p.y.y.x == 6612076403231073280938514808254426931971544825286930605268340134271057321105
        assert c.p.y.y.y == -227143030940355638229086131900420466253377659466909897401375250807239424834333
        assert c.p.y.z.x == -179480661229626807863043969908327324427329158684947396186190800831404787264706
        assert c.p.y.z.y == -106977123912702184488077907108866176808927617757024850174095162329605384275502

        assert (
                c.marshal().hex()
                == "2caff362f5327c13fc473e869f1b330c9d0ffd6ce4a34ac3f337a76fd2c80d6c11c1e125cfff0cfd469ada7ef5acd5f0ef9"
                   "57cc9c91b48ce43920731c3b3f0e61e0a53e0acd0e2618b7a113c6456d37deae0ad85493539305a39ecd0a2b405d82e2ced"
                   "c0000d135f76014727771458db745009357faeb40960cec8cdd63d27302eb80d3c0a769f0f4cebcfefa22edbc7e93fcbd2a"
                   "a76848eaba1985115f23374051d55c05f65e0f7d6530d2aef087a5787a9848ecb97725f84e95c980850b07f0525462efa3e"
                   "2f544fc419939f65f856c4754aba0c6f5aea416620682d2d83810a1a33e1f9a398c4e9d819c251d707c8613c54369e0dec2"
                   "4f9ecec952a601c100e9e4d78a3053b985221ad34ba74a3cef147b10a90c68a7e15454ca9f11edc911e20f8a52dc576cc63"
                   "ffc74e349c04e5d1cb4ced9f342709989d0de8fb3f66f026b84dbc4b0f2221b119ff869f4cb293e411931a09878efa551d0"
                   "fc5ec9a7abd0572a032665d77a9609daa25eb8a86aeb04c1a5147aa699e81b1baefb81f6c35"
        )

    def test_gt_pair(self):  # ✅
        gt = GT.pair(G1(CURVE_G), G2(TWIST_G))

        assert gt.p.x.x.x == -36291943388924125810871148410323613252911085699294832121685569512396245399159
        assert gt.p.x.x.y == 6223602427219597392892794664899549544171383137467762280768257680446283161705

        assert gt.p.x.y.x == 302465985998980069233243018277462918705605420266482443426069781714222083500926
        assert gt.p.x.y.y == 187250995013281090019227918185164790983548918774084783057291293800587056619394

        assert gt.p.x.z.x == -397817446018798076550824682787176502305910133681866638444307054917272233798465
        assert gt.p.x.z.y == -89391996343544369914205855114938870953972877139705901537124451996518938483034

        assert gt.p.y.x.x == 107008395830933987319875472754396498301242693702719749747967098417581052532704
        assert gt.p.y.x.y == 110076211846834985444035612218029711296102429575391508678500276293944720763033

        assert gt.p.y.y.x == -160449336400777700034513612921010176052958261956909504495884912408289192387680
        assert gt.p.y.y.y == 203559983940867568391418883211543700364762739957218507731082712914783762920285

        assert gt.p.y.z.x == 3758435817766288188804561253838670030762970764366672594784247447067868088068
        assert gt.p.y.z.y == -341718551578644386583937402010528190091452755017035280651308399346002892829307

    def test_gt_scalar_mult(self):  # ✅
        gt = GT.pair(G1(CURVE_G), G2(TWIST_G))

        k = 17789463703410470926570272169384173597171808111278036638494118056118083640224
        c = gt.scalar_mult(k)
        assert c.p.x.x.x == -34454621411537811396419000207844179530742552944308194138398607173712656833168
        assert c.p.x.x.y == -21953588207649719508288147153435313889034351427605038385661224268301153611034

        assert c.p.x.y.x == 217745519166078460502078494581152829823629842890098969815102087066120373922728
        assert c.p.x.y.y == -26316854364201728941208639863193838999923401987959338910514846060123074428562

        assert c.p.x.z.x == -18987486312259077480499762666619938179581377234911563046561223228988114094316
        assert c.p.x.z.y == 42715018517234521727978176959278983733006088811721422199958171536568375761702

        assert c.p.y.x.x == -87528031223368559840322799143719819928016464252755675330669990379807030726664
        assert c.p.y.x.y == 50533217170173535234055942675660485110189284861033885063717191950645918071037

        assert c.p.y.y.x == -39545588102489648655147050747791306550600884044653756147595029687444329207088
        assert c.p.y.y.y == 4940683273863713877844059522028220042832258426496958174158510206134364513610

        assert c.p.y.z.x == 138563105374586778204689916708325159450268756510221312351517913760840016372735
        assert c.p.y.z.y == -143083691858367263810097829518744594043710804588827602407021776947150047075454

    def test_gt_marshal(self):  # ✅
        gt = GT.base()
        data = gt.marshal()
        gt2 = GT.unmarshal(data)
        assert gt == gt2

    def test_gt_order(self):  # ✅
        gt = GT.base()
        c = gt.scalar_mult(ORDER)
        assert c.p.is_one()
